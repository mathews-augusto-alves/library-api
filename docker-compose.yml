services:
  api:
    build: .
    container_name: api_library_app
    ports:
      - "8000:8000"
    environment:
      # Database
      - DATABASE_URL=postgresql://appuser:apppassword@postgres:5432/appdb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppassword
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=appdb
      
      # Redis
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_ENABLED=true
      
      # Application
      - APP_TZ=America/Sao_Paulo
      - JWT_SECRET=dev-secret-change-in-production
      - JWT_EXPIRES_SECONDS=3600
      
      # Logging
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - api_network
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: api_library_postgres
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - api_network

  redis:
    image: redis:7-alpine
    container_name: api_library_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - api_network

  # Prometheus para m√©tricas
  prometheus:
    image: prom/prometheus:latest
    container_name: api_library_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - api_network

  # Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: api_library_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./docker/monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./docker/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/monitoring/grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - api_network
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  api_network:
    driver: bridge 